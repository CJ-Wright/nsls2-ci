#!/bin/bash
: "${GH_TOKEN:?GH_TOKEN not set. Cannot push to github}"
: "${HTML_DIR:?HTML_DIR not set. Do not know where to go to get the built docs}"
: "${TRAVIS_REPO_SLUG:?TRAVIS_REPO_SLUG not set. Docs will not build properly. Please set a repo slug in the form: organization/git_repo. e.g., NSLS-II/databroker}"

message () {
  echo "
    message: $1
  "
}

message "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG"
base=docs/`basename $TRAVIS_REPO_SLUG`

# prepend base with 'docs/' if it is not the parent repo
if [ $base != 'docs' ]; then
  base="";
fi;
message "base=$base"

CLONE_DIR="/tmp/docs"
message "CLONE_DIR=$CLONE_DIR"

message "removing CLONE_DIR=$CLONE_DIR"
rm -rf $CLONE_DIR

# inside this git repo we'll pretend to be a new user
GIT_EMAIL="travis@nomail"
GIT_USERNAME="Travis CI"
message "setting gitconfig information to GIT_USERNAME=$GIT_USERNAME and GIT_EMAIL=$GIT_EMAIL"
git config --global user.name $GIT_USERNAME
git config --global user.email $GIT_EMAIL

message "cloning to $CLONE_DIR"
git clone "https://{GH_TOKEN}@${GH_REF}" $CLONE_DIR

message "copying contents of CLONE_DIR/base=$CLONE_DIR/$base to HTML_DIR=$HTML_DIR"
cp -rv $HTML_DIR* $CLONE_DIR/$base

message "pushd-ing to CLONE_DIR=$CLONE_DIR"
pushd $CLONE_DIR

message "Adding all changes to the git repo"
git add -A

message "Comitting the added files"
git commit -m "Autogenerated pages for $TRAVIS_REPO_SLUG from travis-ci `date`"

# Force push from the current repo's master branch to the remote
# repo's gh-pages branch. (All previous history on the gh-pages branch
# will be lost, since we are overwriting it.) We redirect any output to
# /dev/null to hide any sensitive credential data that might otherwise be exposed.
message "Pushing docs to https://<token_scrubbed>@${GH_REF}"
git push "https://${GH_TOKEN}@${GH_REF}" master > /dev/null 2>&1
popd
